{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/Input.jsx","components/SideBar.jsx","components/Object.jsx","components/Canvas.jsx","components/Cursor.jsx","components/Pop.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Button","children","callback","style","className","onClick","Header","currentTool","setCurrentTool","handleTogglePop","color","Input","value","title","type","input","onChange","e","newValue","target","Number","isNaN","placeholder","newRGB","map","i","SideBar","sideBar","width","setWidth","height","setHeight","radius","setRadius","fill","setFill","strokeColor","setStrokeColor","strokeWidth","setStrokeWidth","widthInput","heightInput","radiusInput","fillInput","strokeColorInput","strokeWidthInput","Object","data","DOM","setDOM","index","x","y","x2","y2","top","left","background","borderWidth","borderColor","rotation","newWidth","Math","sqrt","pow","hypotenuse","adjacent","abs","angle","acos","PI","transform","borderLeftWidth","borderRightWidth","newDOM","filter","_","Canvas","objects","object","key","Cursor","openPop","useState","setTop","setLeft","useEffect","window","onmousemove","handleUpdateLocation","mouse","clientY","clientX","innerWidth","cursor","Pop","codeRef","useRef","code","push","innerHeight","forEach","betterCode","line","split","char","i2","handleCopyCode","a","navigator","clipboard","writeText","join","ref","App","setOpenPop","handleAddObject","calculate","clientX2","clientY2","round","concat","addEventListener","onmouseup","removeEventListener","onmousedown","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9baf7c2c.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.scss'\n\nexport default function Button({ children, callback, style, className }) {\n    return (\n        <div className={`button ${className}`} onClick={callback} style={style}>\n            {children}\n        </div>\n    )\n}\n","import React from 'react'\nimport './Header.scss'\n\nimport Button from './Button'\n\nexport default function Header({\n    currentTool,\n    setCurrentTool,\n    handleTogglePop,\n}) {\n    const handleSwitchEllipse = () => {\n        const tool = 'ellipse'\n        if (currentTool !== tool) setCurrentTool(tool)\n    }\n    const handleSwitchRect = () => {\n        const tool = 'rect'\n        if (currentTool !== tool) setCurrentTool(tool)\n    }\n    const handleSwitchCircle = () => {\n        const tool = 'circle'\n        if (currentTool !== tool) setCurrentTool(tool)\n    }\n    const handleSwitchLine = () => {\n        const tool = 'line'\n        if (currentTool !== tool) setCurrentTool(tool)\n    }\n    const handleSwitchDelete = () => {\n        const tool = 'delete'\n        if (currentTool !== tool) setCurrentTool(tool)\n    }\n\n    return (\n        <div className=\"header\">\n            <div className=\"tools\">\n                <Button\n                    callback={handleSwitchRect}\n                    className={currentTool === 'rect' ? 'selected' : ''}\n                >\n                    Rect\n                </Button>\n                <Button\n                    callback={handleSwitchEllipse}\n                    className={currentTool === 'ellipse' ? 'selected' : ''}\n                >\n                    Ellipse\n                </Button>\n                <Button\n                    callback={handleSwitchCircle}\n                    className={currentTool === 'circle' ? 'selected' : ''}\n                >\n                    Circle\n                </Button>\n                <Button\n                    callback={handleSwitchLine}\n                    className={currentTool === 'line' ? 'selected' : ''}\n                >\n                    Line\n                </Button>\n                <Button\n                    callback={handleSwitchDelete}\n                    className={currentTool === 'delete' ? 'selected' : ''}\n                >\n                    Delete\n                </Button>\n            </div>\n            <div className=\"other\">\n                <Button\n                    callback={handleTogglePop}\n                    style={{ color: 'cornflowerblue' }}\n                >\n                    Export for Processing\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import React, { Fragment } from 'react'\nimport './Input.scss'\n\nexport default function Input({ value, callback, title, type = 'number' }) {\n    const handleNumberValue = e => {\n        const newValue = e.target.value\n        if (Number.isNaN(Number(newValue))) return\n        if (Number(newValue) < 0) return\n        callback(newValue)\n    }\n\n    const handleRedValue = e => {\n        const newValue = e.target.value\n        if (Number.isNaN(Number(newValue))) return\n        if (Number(newValue) < 0) return\n        if (Number(newValue) > 255) return\n\n        let newRGB = value\n        newRGB = newRGB.map((color, i) => (i === 0 ? newValue : color))\n        callback(newRGB)\n    }\n    const handleGreenValue = e => {\n        const newValue = e.target.value\n        if (Number.isNaN(Number(newValue))) return\n        if (Number(newValue) < 0) return\n        if (Number(newValue) > 255) return\n\n        let newRGB = value\n        newRGB = newRGB.map((color, i) => (i === 1 ? newValue : color))\n        callback(newRGB)\n    }\n    const handleBlueValue = e => {\n        const newValue = e.target.value\n        if (Number.isNaN(Number(newValue))) return\n        if (Number(newValue) < 0) return\n        if (Number(newValue) > 255) return\n\n        let newRGB = value\n        newRGB = newRGB.map((color, i) => (i === 2 ? newValue : color))\n        callback(newRGB)\n    }\n\n    const input =\n        type === 'number' ? (\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                onChange={handleNumberValue}\n                placeholder=\"0\"\n            />\n        ) : (\n            <div className=\"rgb-input-container\">\n                <div className=\"rgb-label red\">R</div>\n                <input\n                    type=\"text\"\n                    className=\"rgb-input\"\n                    value={value[0]}\n                    onChange={handleRedValue}\n                    placeholder=\"0\"\n                />\n                <div className=\"rgb-label green\">G</div>\n                <input\n                    type=\"text\"\n                    className=\"rgb-input\"\n                    value={value[1]}\n                    onChange={handleGreenValue}\n                    placeholder=\"0\"\n                />\n                <div className=\"rgb-label blue\">B</div>\n                <input\n                    type=\"text\"\n                    className=\"rgb-input\"\n                    value={value[2]}\n                    onChange={handleBlueValue}\n                    placeholder=\"0\"\n                />\n            </div>\n        )\n\n    return (\n        <div className=\"input-container\">\n            <div className=\"title\">{title}</div>\n            {input}\n        </div>\n    )\n}\n","import React, { Fragment } from 'react'\nimport './SideBar.scss'\n\nimport Input from './Input'\n\nexport default function SideBar({\n    currentTool,\n    width,\n    setWidth,\n    height,\n    setHeight,\n    radius,\n    setRadius,\n    fill,\n    setFill,\n    strokeColor,\n    setStrokeColor,\n    strokeWidth,\n    setStrokeWidth,\n}) {\n    let sideBar\n\n    const widthInput = <Input value={width} callback={setWidth} title=\"Width\" />\n    const heightInput = (\n        <Input value={height} callback={setHeight} title=\"Height\" />\n    )\n    const radiusInput = (\n        <Input value={radius} callback={setRadius} title=\"Radius\" />\n    )\n    const fillInput = (\n        <Input value={fill} callback={setFill} title=\"Fill\" type=\"rgb\" />\n    )\n    const strokeColorInput = (\n        <Input\n            value={strokeColor}\n            callback={setStrokeColor}\n            title=\"Stroke Color\"\n            type=\"rgb\"\n        />\n    )\n    const strokeWidthInput = (\n        <Input\n            value={strokeWidth}\n            callback={setStrokeWidth}\n            title=\"Stroke Width\"\n        />\n    )\n\n    switch (currentTool) {\n        case 'rect':\n        case 'ellipse':\n            sideBar = (\n                <Fragment>\n                    {widthInput}\n                    {heightInput}\n                    {fillInput}\n                    {strokeColorInput}\n                    {strokeWidthInput}\n                </Fragment>\n            )\n            break\n        case 'circle':\n            sideBar = (\n                <Fragment>\n                    {radiusInput}\n                    {fillInput}\n                    {strokeColorInput}\n                    {strokeWidthInput}\n                </Fragment>\n            )\n            break\n        case 'line':\n            sideBar = (\n                <Fragment>\n                    {strokeColorInput}\n                    {strokeWidthInput}\n                </Fragment>\n            )\n\n            break\n    }\n\n    return <div className=\"side-bar\">{sideBar}</div>\n}\n","import React from 'react'\nimport './Object.scss'\n\nexport default function Object({ data, DOM, setDOM, index, currentTool }) {\n    const {\n        type,\n        x,\n        y,\n        height,\n        fill,\n        strokeWidth,\n        strokeColor,\n        radius,\n        x2,\n        y2,\n        width,\n    } = data\n\n    let style\n\n    switch (type) {\n        case 'rect':\n        case 'ellipse':\n            style = {\n                top: y,\n                left: x,\n                width: `${Number(width)}px`,\n                height: `${Number(height)}px`,\n                background: `rgb(${Number(fill[0])},${Number(fill[1])},${Number(\n                    fill[2]\n                )})`,\n                borderWidth: `${Number(strokeWidth)}px`,\n                borderColor: `rgb(${Number(strokeColor[0])},${Number(\n                    strokeColor[1]\n                )},${Number(strokeColor[2])})`,\n            }\n            break\n        case 'circle':\n            style = {\n                top: y,\n                left: x,\n                width: `${Number(radius)}px`,\n                height: `${Number(radius)}px`,\n                background: `rgb(${Number(fill[0])},${Number(fill[1])},${Number(\n                    fill[2]\n                )})`,\n                borderWidth: `${Number(strokeWidth)}px`,\n                borderColor: `rgb(${Number(strokeColor[0])},${Number(\n                    strokeColor[1]\n                )},${Number(strokeColor[2])})`,\n            }\n            break\n        case 'line':\n            const newWidth = Math.sqrt(\n                Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2)\n            )\n            const hypotenuse = newWidth\n            const adjacent = Math.abs(y2 - y)\n\n            const angle = Math.acos(adjacent / hypotenuse) * (180 / Math.PI)\n\n            let rotation\n\n            // top right\n            if (x2 > x && y2 < y) rotation = 270 + angle\n            // bottom right\n            else if (x2 > x && y2 > y) rotation = 90 - angle\n            // bottom left\n            else if (x2 < x && y2 > y) rotation = 90 + angle\n            // top left\n            else rotation = 270 - angle\n\n            style = {\n                top: y,\n                left: x,\n                width: `${newWidth}px`,\n                height: 0,\n                borderWidth: `${Number(strokeWidth)}px`,\n                borderColor: `rgb(${Number(strokeColor[0])},${Number(\n                    strokeColor[1]\n                )},${Number(strokeColor[2])})`,\n                transform: `rotate(${rotation}deg)`,\n                borderLeftWidth: 0,\n                borderRightWidth: 0,\n            }\n    }\n\n    const handleClick = () => {\n        if (currentTool !== 'delete') return\n\n        const newDOM = DOM.filter((_, i) => index !== i)\n        setDOM(newDOM)\n    }\n\n    return (\n        <div\n            className={`object ${type}`}\n            style={style}\n            onClick={handleClick}\n        ></div>\n    )\n}\n","import React from 'react'\nimport './Canvas.scss'\n\nimport Object from './Object'\n\nexport default function Canvas({ DOM, setDOM, currentTool }) {\n    const objects = DOM.map((object, i) => (\n        <Object\n            key={i}\n            data={object}\n            index={i}\n            DOM={DOM}\n            setDOM={setDOM}\n            currentTool={currentTool}\n        />\n    ))\n\n    return <div className=\"canvas\">{objects}</div>\n}\n","import React, { useEffect, useState, Fragment } from 'react'\nimport './Cursor.scss'\n\nexport default function Cursor({\n    currentTool,\n    width,\n    setWidth,\n    height,\n    setHeight,\n    radius,\n    setRadius,\n    fill,\n    setFill,\n    strokeColor,\n    setStrokeColor,\n    strokeWidth,\n    setStrokeWidth,\n    openPop,\n}) {\n    const [top, setTop] = useState(0)\n    const [left, setLeft] = useState(0)\n\n    useEffect(() => {\n        window.onmousemove = handleUpdateLocation\n    }, [setTop, setLeft])\n\n    const handleUpdateLocation = mouse => {\n        setTop(mouse.clientY)\n        setLeft(mouse.clientX)\n    }\n\n    if (openPop) return <Fragment />\n    if (top < 100) return <Fragment />\n    if (left > window.innerWidth - 200) return <Fragment />\n\n    let style\n\n    switch (currentTool) {\n        case 'rect':\n        case 'ellipse':\n            style = {\n                top,\n                left,\n                width: `${Number(width)}px`,\n                height: `${Number(height)}px`,\n                background: `rgb(${Number(fill[0])},${Number(fill[1])},${Number(\n                    fill[2]\n                )})`,\n                borderWidth: `${Number(strokeWidth)}px`,\n                borderColor: `rgb(${Number(strokeColor[0])},${Number(\n                    strokeColor[1]\n                )},${Number(strokeColor[2])})`,\n            }\n            break\n        case 'circle':\n            style = {\n                top,\n                left,\n                width: `${Number(radius)}px`,\n                height: `${Number(radius)}px`,\n                background: `rgb(${Number(fill[0])},${Number(fill[1])},${Number(\n                    fill[2]\n                )})`,\n                borderWidth: `${Number(strokeWidth)}px`,\n                borderColor: `rgb(${Number(strokeColor[0])},${Number(\n                    strokeColor[1]\n                )},${Number(strokeColor[2])})`,\n            }\n            break\n        case 'line':\n            style = {\n                top: `${top - 1000}px`,\n                left: `${left - 1000}px`,\n                width: '2000px',\n                height: '2000px',\n                cursor: 'cell',\n            }\n            break\n        case 'delete':\n            break\n    }\n\n    return <div className={`cursor ${currentTool}`} style={style}></div>\n}\n","import React, { Fragment, useRef } from 'react'\nimport './Pop.scss'\n\nimport Button from './Button'\n\nexport default function Pop({ openPop, handleTogglePop, DOM }) {\n    const codeRef = useRef(null)\n\n    if (!openPop) return <Fragment />\n\n    let code = []\n\n    code.push(`size(${window.innerWidth - 200}, ${window.innerHeight - 100});`)\n    DOM.forEach(object => {\n        switch (object.type) {\n            case 'rect':\n                code.push(\n                    `fill(${object.fill[0]}, ${object.fill[1]}, ${object.fill[2]});`\n                )\n                if (object.strokeWidth > 0) {\n                    code.push(\n                        `stroke(${object.strokeColor[0]}, ${object.strokeColor[1]}, ${object.strokeColor[2]});`\n                    )\n                    code.push(`strokeWeight(${object.strokeWidth});`)\n                }\n                code.push(\n                    `rect(${object.x}, ${object.y}, ${object.width}, ${object.height});`\n                )\n                break\n            case 'ellipse':\n                code.push(\n                    `fill(${object.fill[0]}, ${object.fill[1]}, ${object.fill[2]});`\n                )\n                if (object.strokeWidth > 0) {\n                    code.push(\n                        `stroke(${object.strokeColor[0]}, ${object.strokeColor[1]}, ${object.strokeColor[2]});`\n                    )\n                    code.push(`strokeWeight(${object.strokeWidth});`)\n                }\n                code.push(\n                    `ellipse(${object.x}, ${object.y}, ${object.width}, ${object.height});`\n                )\n                break\n            case 'circle':\n                code.push(\n                    `fill(${object.fill[0]}, ${object.fill[1]}, ${object.fill[2]});`\n                )\n                if (object.strokeWidth > 0) {\n                    code.push(\n                        `stroke(${object.strokeColor[0]}, ${object.strokeColor[1]}, ${object.strokeColor[2]});`\n                    )\n                    code.push(`strokeWeight(${object.strokeWidth});`)\n                }\n                code.push(\n                    `circle(${object.x + object.radius / 2}, ${\n                        object.y + object.radius / 2\n                    }, ${object.radius});`\n                )\n                break\n            case 'line':\n                if (object.strokeWidth < 0) return\n\n                code.push(\n                    `stroke(${object.strokeColor[0]}, ${object.strokeColor[1]}, ${object.strokeColor[2]});`\n                )\n                code.push(`strokeWeight(${object.strokeWidth});`)\n\n                code.push(\n                    `line(${object.x}, ${object.y}, ${object.x2},${object.y2});`\n                )\n                break\n        }\n    })\n\n    const betterCode = code.map((line, i) => {\n        line = line.split('')\n        line = line.map((char, i2) => {\n            if (Number.isNaN(Number(char))) return char\n            return (\n                <div className=\"number\" key={i * i2}>\n                    {char}\n                </div>\n            )\n        })\n\n        return (\n            <div key={i} className=\"line\">\n                {line}\n            </div>\n        )\n    })\n\n    const handleCopyCode = async () => {\n        await navigator.clipboard.writeText(code.join('\\n'))\n    }\n\n    return (\n        <div className=\"pop-container\">\n            <div className=\"pop\">\n                <div className=\"close\" onClick={handleTogglePop}>\n                    X\n                </div>\n                <Button className=\"copy-button\" callback={handleCopyCode}>\n                    Copy Code\n                </Button>\n                <div className=\"code-container\" ref={codeRef}>\n                    {betterCode}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, Fragment, useEffect } from 'react'\nimport './App.scss'\n\nimport Header from './components/Header'\nimport SideBar from './components/SideBar'\nimport Canvas from './components/Canvas'\nimport Cursor from './components/Cursor'\nimport Pop from './components/Pop'\n\nexport default function App() {\n    const [currentTool, setCurrentTool] = useState('rect')\n    const [DOM, setDOM] = useState([])\n\n    const [width, setWidth] = useState(50)\n    const [height, setHeight] = useState(50)\n    const [radius, setRadius] = useState(50)\n    const [fill, setFill] = useState([0, 0, 0])\n    const [strokeColor, setStrokeColor] = useState([0, 0, 0])\n    const [strokeWidth, setStrokeWidth] = useState(5)\n\n    const [openPop, setOpenPop] = useState(false)\n\n    const handleAddObject = mouse => {\n        if (openPop) return\n\n        const { clientX, clientY } = mouse\n\n        if (clientX > window.innerWidth - 200) return\n        if (clientY < 100) return\n\n        if (currentTool === 'line') {\n            let init = false\n\n            const calculate = mouse => {\n                const { clientX: clientX2, clientY: clientY2 } = mouse\n\n                const object = {\n                    x: Math.round(clientX),\n                    y: Math.round(clientY - 100),\n                    x2: Math.round(clientX2),\n                    y2: Math.round(clientY2 - 100),\n                    strokeWidth,\n                    strokeColor,\n                    type: currentTool,\n                }\n\n                let newDOM\n\n                if (init) {\n                    newDOM = DOM.pop()\n                }\n\n                newDOM = DOM.concat([object])\n                setDOM(newDOM)\n                return\n            }\n\n            window.addEventListener('mousemove', calculate)\n\n            window.onmouseup = () =>\n                window.removeEventListener('mousemove', calculate)\n\n            return\n        }\n\n        let object = { x: Math.round(clientX), y: Math.round(clientY - 100) }\n        switch (currentTool) {\n            case 'rect':\n            case 'ellipse':\n                object = {\n                    ...object,\n                    width,\n                    height,\n                    fill,\n                    strokeColor,\n                    strokeWidth,\n                }\n                break\n            case 'circle':\n                object = {\n                    ...object,\n                    radius,\n                    fill,\n                    strokeColor,\n                    strokeWidth,\n                }\n                break\n        }\n\n        object = { ...object, type: currentTool }\n\n        const newDOM = DOM.concat([object])\n        setDOM(newDOM)\n    }\n\n    useEffect(() => {\n        window.onmousedown = handleAddObject\n    }, [handleAddObject])\n\n    const handleTogglePop = () => setOpenPop(!openPop)\n\n    return (\n        <Fragment>\n            <Header {...{ currentTool, setCurrentTool, handleTogglePop }} />\n            <div className=\"bottom-container\">\n                <Canvas DOM={DOM} setDOM={setDOM} currentTool={currentTool} />\n                <SideBar\n                    {...{\n                        currentTool,\n                        width,\n                        setWidth,\n                        height,\n                        setHeight,\n                        radius,\n                        setRadius,\n                        fill,\n                        setFill,\n                        strokeColor,\n                        setStrokeColor,\n                        strokeWidth,\n                        setStrokeWidth,\n                    }}\n                />\n            </div>\n            <Cursor\n                {...{\n                    currentTool,\n                    width,\n                    setWidth,\n                    height,\n                    setHeight,\n                    radius,\n                    setRadius,\n                    fill,\n                    setFill,\n                    strokeColor,\n                    setStrokeColor,\n                    strokeWidth,\n                    setStrokeWidth,\n                    openPop,\n                }}\n            />\n            <Pop {...{ openPop, handleTogglePop, DOM }} />\n        </Fragment>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}